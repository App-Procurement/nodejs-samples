{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "AddRequestLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-AddRequest"
      }
    },
    "DeleteRequestLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-DeleteRequest"
      }
    },
    "SearchRequestLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-SearchRequest"
      }
    },
    "UpdateRequestLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-UpdateRequest"
      }
    },
    "DeactivateRequestLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-DeactivateRequest"
      }
    },
    "ApproveRequestLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-ApproveRequest"
      }
    },
    "AddSupplierLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-AddSupplier"
      }
    },
    "DeleteSupplierLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-DeleteSupplier"
      }
    },
    "SearchSupplierLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-SearchSupplier"
      }
    },
    "UpdateSupplierLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-UpdateSupplier"
      }
    },
    "DeactivateSupplierLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-DeactivateSupplier"
      }
    },
    "AddProductLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-AddProduct"
      }
    },
    "DeleteProductLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-DeleteProduct"
      }
    },
    "SearchProductLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-SearchProduct"
      }
    },
    "UpdateProductLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-UpdateProduct"
      }
    },
    "DeactivateProductLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-DeactivateProduct"
      }
    },
    "AddCurrencyLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-AddCurrency"
      }
    },
    "DeleteCurrencyLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-DeleteCurrency"
      }
    },
    "SearchCurrencyLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-SearchCurrency"
      }
    },
    "UpdateCurrencyLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-UpdateCurrency"
      }
    },
    "DeactivateCurrencyLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-DeactivateCurrency"
      }
    },
    "AddInvoiceLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-AddInvoice"
      }
    },
    "DeleteInvoiceLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-DeleteInvoice"
      }
    },
    "SearchInvoiceLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-SearchInvoice"
      }
    },
    "UpdateInvoiceLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-UpdateInvoice"
      }
    },
    "DeactivateInvoiceLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-DeactivateInvoice"
      }
    },
    "AddPurchaseOrderLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-AddPurchaseOrder"
      }
    },
    "DeletePurchaseOrderLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-DeletePurchaseOrder"
      }
    },
    "SearchPurchaseOrderLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-SearchPurchaseOrder"
      }
    },
    "UpdatePurchaseOrderLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-UpdatePurchaseOrder"
      }
    },
    "DeactivatePurchaseOrderLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-DeactivatePurchaseOrder"
      }
    },
    "AddQuotationLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-AddQuotation"
      }
    },
    "DeleteQuotationLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-DeleteQuotation"
      }
    },
    "SearchQuotationLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-SearchQuotation"
      }
    },
    "UpdateQuotationLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-UpdateQuotation"
      }
    },
    "DeactivateQuotationLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-DeactivateQuotation"
      }
    },
    "AddApproversLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-AddApprovers"
      }
    },
    "DeleteApproversLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-DeleteApprovers"
      }
    },
    "SearchApproversLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-SearchApprovers"
      }
    },
    "UpdateApproversLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-UpdateApprovers"
      }
    },
    "AddCompanyProfileLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-AddCompanyProfile"
      }
    },
    "DeleteCompanyProfileLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-DeleteCompanyProfile"
      }
    },
    "SearchCompanyProfileLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-SearchCompanyProfile"
      }
    },
    "UpdateCompanyProfileLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-UpdateCompanyProfile"
      }
    },
    "DeactivateCompanyProfileLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-DeactivateCompanyProfile"
      }
    },
    "SearchSentEmailsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/procurement-dev-SearchSentEmails"
      }
    },
    "AddRequestLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "request/add_request.add_request",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-AddRequest",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "AddRequestLogGroup"
      ]
    },
    "DeleteRequestLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "request/delete_request.delete_request",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-DeleteRequest",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "DeleteRequestLogGroup"
      ]
    },
    "SearchRequestLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "request/search_request.search_request",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-SearchRequest",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "SearchRequestLogGroup"
      ]
    },
    "UpdateRequestLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "request/upadte_request.upadte_request",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-UpdateRequest",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "UpdateRequestLogGroup"
      ]
    },
    "DeactivateRequestLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "request/deactivate_request.deactivate_request",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-DeactivateRequest",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "DeactivateRequestLogGroup"
      ]
    },
    "ApproveRequestLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "request/approve_request.approve_request",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-ApproveRequest",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "ApproveRequestLogGroup"
      ]
    },
    "AddSupplierLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "supplier/add_supplier.add_supplier",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-AddSupplier",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "AddSupplierLogGroup"
      ]
    },
    "DeleteSupplierLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "supplier/delete_supplier.delete_supplier",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-DeleteSupplier",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "DeleteSupplierLogGroup"
      ]
    },
    "SearchSupplierLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "supplier/search_supplier.search_supplier",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-SearchSupplier",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "SearchSupplierLogGroup"
      ]
    },
    "UpdateSupplierLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "supplier/upadte_supplier.upadte_supplier",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-UpdateSupplier",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "UpdateSupplierLogGroup"
      ]
    },
    "DeactivateSupplierLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "supplier/deactivate_supplier.deactivate_supplier",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-DeactivateSupplier",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "DeactivateSupplierLogGroup"
      ]
    },
    "AddProductLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "product/add_product.add_product",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-AddProduct",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "AddProductLogGroup"
      ]
    },
    "DeleteProductLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "product/delete_product.delete_product",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-DeleteProduct",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "DeleteProductLogGroup"
      ]
    },
    "SearchProductLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "product/search_product.search_product",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-SearchProduct",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "SearchProductLogGroup"
      ]
    },
    "UpdateProductLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "product/upadte_product.upadte_product",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-UpdateProduct",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "UpdateProductLogGroup"
      ]
    },
    "DeactivateProductLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "product/deactivate_product.deactivate_product",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-DeactivateProduct",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "DeactivateProductLogGroup"
      ]
    },
    "AddCurrencyLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "currency/add_currency.add_currency",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-AddCurrency",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "AddCurrencyLogGroup"
      ]
    },
    "DeleteCurrencyLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "currency/delete_currency.delete_currency",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-DeleteCurrency",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "DeleteCurrencyLogGroup"
      ]
    },
    "SearchCurrencyLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "currency/search_currency.search_currency",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-SearchCurrency",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "SearchCurrencyLogGroup"
      ]
    },
    "UpdateCurrencyLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "currency/upadte_currency.upadte_currency",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-UpdateCurrency",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "UpdateCurrencyLogGroup"
      ]
    },
    "DeactivateCurrencyLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "currency/deactivate_currency.deactivate_currency",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-DeactivateCurrency",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "DeactivateCurrencyLogGroup"
      ]
    },
    "AddInvoiceLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "invoice/add_invoice.add_invoice",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-AddInvoice",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "AddInvoiceLogGroup"
      ]
    },
    "DeleteInvoiceLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "invoice/delete_invoice.delete_invoice",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-DeleteInvoice",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "DeleteInvoiceLogGroup"
      ]
    },
    "SearchInvoiceLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "invoice/search_invoice.search_invoice",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-SearchInvoice",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "SearchInvoiceLogGroup"
      ]
    },
    "UpdateInvoiceLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "invoice/upadte_invoice.upadte_invoice",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-UpdateInvoice",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "UpdateInvoiceLogGroup"
      ]
    },
    "DeactivateInvoiceLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "invoice/deactivate_invoice.deactivate_invoice",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-DeactivateInvoice",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "DeactivateInvoiceLogGroup"
      ]
    },
    "AddPurchaseOrderLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "purchase_order/add_purchase_order.add_purchase_order",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-AddPurchaseOrder",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "AddPurchaseOrderLogGroup"
      ]
    },
    "DeletePurchaseOrderLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "purchase_order/delete_purchase_order.delete_purchase_order",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-DeletePurchaseOrder",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "DeletePurchaseOrderLogGroup"
      ]
    },
    "SearchPurchaseOrderLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "purchase_order/search_purchase_order.search_purchase_order",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-SearchPurchaseOrder",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "SearchPurchaseOrderLogGroup"
      ]
    },
    "UpdatePurchaseOrderLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "purchase_order/upadte_purchase_order.upadte_purchase_order",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-UpdatePurchaseOrder",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "UpdatePurchaseOrderLogGroup"
      ]
    },
    "DeactivatePurchaseOrderLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "purchase_order/deactivate_purchase_order.deactivate_purchase_order",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-DeactivatePurchaseOrder",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "DeactivatePurchaseOrderLogGroup"
      ]
    },
    "AddQuotationLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "quotation/add_quotation.add_quotation",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-AddQuotation",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "AddQuotationLogGroup"
      ]
    },
    "DeleteQuotationLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "quotation/delete_quotation.delete_quotation",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-DeleteQuotation",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "DeleteQuotationLogGroup"
      ]
    },
    "SearchQuotationLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "quotation/search_quotation.search_quotation",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-SearchQuotation",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "SearchQuotationLogGroup"
      ]
    },
    "UpdateQuotationLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "quotation/upadte_quotation.upadte_quotation",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-UpdateQuotation",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "UpdateQuotationLogGroup"
      ]
    },
    "DeactivateQuotationLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "quotation/deactivate_quotation.deactivate_quotation",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-DeactivateQuotation",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "DeactivateQuotationLogGroup"
      ]
    },
    "AddApproversLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "approvers/add_approvers.add_approvers",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-AddApprovers",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "AddApproversLogGroup"
      ]
    },
    "DeleteApproversLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "approvers/delete_approvers.delete_approvers",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-DeleteApprovers",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "DeleteApproversLogGroup"
      ]
    },
    "SearchApproversLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "approvers/search_approvers.search_approvers",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-SearchApprovers",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "SearchApproversLogGroup"
      ]
    },
    "UpdateApproversLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "approvers/upadte_approvers.upadte_approvers",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-UpdateApprovers",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "UpdateApproversLogGroup"
      ]
    },
    "AddCompanyProfileLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "company_profile/add_company_profile.add_company_profile",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-AddCompanyProfile",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "AddCompanyProfileLogGroup"
      ]
    },
    "DeleteCompanyProfileLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "company_profile/delete_company_profile.delete_company_profile",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-DeleteCompanyProfile",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "DeleteCompanyProfileLogGroup"
      ]
    },
    "SearchCompanyProfileLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "company_profile/search_company_profile.search_company_profile",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-SearchCompanyProfile",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "SearchCompanyProfileLogGroup"
      ]
    },
    "UpdateCompanyProfileLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "company_profile/upadte_company_profile.upadte_company_profile",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-UpdateCompanyProfile",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "UpdateCompanyProfileLogGroup"
      ]
    },
    "DeactivateCompanyProfileLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "company_profile/deactivate_company_profile.deactivate_company_profile",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-DeactivateCompanyProfile",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "DeactivateCompanyProfileLogGroup"
      ]
    },
    "SearchSentEmailsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/procurement/dev/1675252922420-2023-02-01T12:02:02.420Z/procurement.zip"
        },
        "Handler": "email/search_sent_emails.search_sent_emails",
        "Runtime": "nodejs14.x",
        "FunctionName": "procurement-dev-SearchSentEmails",
        "MemorySize": 1024,
        "Timeout": 15,
        "Role": "arn:aws:iam::657907747545:role/service-role/StepFunction_uc1_Requirement-role-2coy70yw"
      },
      "DependsOn": [
        "SearchSentEmailsLogGroup"
      ]
    },
    "AddRequestLambdaVersionPKv0Se9XVs0HyO2WrQsM6JFXIVE1JJAhaLfnV7jdR0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AddRequestLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "DeleteRequestLambdaVersionkuQ2yVhfFhltHKgCIhWa7faKdT9EMn7z6dMUX8xMc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteRequestLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "SearchRequestLambdaVersionOEDEbJfOKun3ybTPouBtX2gU87RfDCCMFrxeYJjryQ": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SearchRequestLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "UpdateRequestLambdaVersionBnDubYvlFLsoXl1YoES9WGE4EDXJW1GzATSVjzxdeo": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateRequestLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "DeactivateRequestLambdaVersionIkNlgd4v9fpAneU1TyLgDgcL0n3XGJDpL4k64EaFlck": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeactivateRequestLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "ApproveRequestLambdaVersiongtlqytx6MRlkrIgAXYvBt4rPdn7vzAAWAdgLDdrcqE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ApproveRequestLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "AddSupplierLambdaVersionYXhH291cc2dM9ABRGnrkRo4NrcLSpczCxxnuqQIG4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AddSupplierLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "DeleteSupplierLambdaVersion9X8bXBj8HfdjsBw0oi4x3K4GFKD6Eufys4VfLuvw8": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteSupplierLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "SearchSupplierLambdaVersionctZkJmT06QBldPFZOe8Cp7GU3VBenpesES6lQRsxo": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SearchSupplierLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "UpdateSupplierLambdaVersionLfiCpzykh4hFs0FNkAeaS5Pn60g6uVgeo0LAvps": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateSupplierLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "DeactivateSupplierLambdaVersionQqvsfpu3OTBrU1AoLeZeQbjvAG6GzJUfjaksmPA": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeactivateSupplierLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "AddProductLambdaVersiontGILAZ1dXgbLnpneBrKxDJzD77N6628kzb6S3kaTk": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AddProductLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "DeleteProductLambdaVersionnR1YUNA3IS5l2EhxHZAHgf8vq0r5tnDeR8a24Hg9g": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteProductLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "SearchProductLambdaVersionsDnMFxTTEOtPqOPnRkPiZl37tBLFT5GczqoVIn44r8": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SearchProductLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "UpdateProductLambdaVersionlFdEuY7Mkkp0yCJdtXl92gXkdJvf4htnhzrT9j7SO4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateProductLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "DeactivateProductLambdaVersionxC2tKr1aYhsdn5higOsLQl648DpZmgCMGbJR7SRDhss": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeactivateProductLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "AddCurrencyLambdaVersion50XZuacQaGJSlrye8oO7PBA49fbzyALENNauqQoEB4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AddCurrencyLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "DeleteCurrencyLambdaVersionVh5pjYdyVxNAGUljKmA6Ol4RSBegq0Cc4y1pyPYfRg": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteCurrencyLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "SearchCurrencyLambdaVersionfzJMH96jM2Lgp4xvkIsksCMxh4q1aetPpTRNkLcpc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SearchCurrencyLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "UpdateCurrencyLambdaVersionH7Jv8tR5JLG2frnMq3G3j61z5dBmY4FIp4PMs8X8M": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateCurrencyLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "DeactivateCurrencyLambdaVersionaf5KxOnvC7vheoTVyboE9A45HoX616LE4S8Dkx5g": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeactivateCurrencyLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "AddInvoiceLambdaVersionr7CIVufQZocX5vkuQ3C51g2LmDVqoVIOK3fBhDrbyU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AddInvoiceLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "DeleteInvoiceLambdaVersiontRbORo1m5inWbQGljN400n3BGNl965Y4gwI7yFvHU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteInvoiceLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "SearchInvoiceLambdaVersion5VXgDBsELH4NyRdrOvX65ggEGmIf7PlDLlvHW86WXI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SearchInvoiceLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "UpdateInvoiceLambdaVersionQNhxkQqPcoxmHC09qo7NH1hjWqYNc6mrwYrrqLW6P68": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateInvoiceLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "DeactivateInvoiceLambdaVersionNVLH6opXcR7xG244BdC6K1VzPkrbAyFOGHcEUHd5Yd4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeactivateInvoiceLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "AddPurchaseOrderLambdaVersionh7d5jTBGKnUL9b2PVoP7pYYa9BYBLQgN7MHwRdW3c": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AddPurchaseOrderLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "DeletePurchaseOrderLambdaVersionJs4mZdCR0tYVAXhsVrdbsus2DPph6XYmGFZDRQ3o": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeletePurchaseOrderLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "SearchPurchaseOrderLambdaVersion2zqeAqTf139HVMXEKAgcUh671b6RXGrI86knOK4qWA": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SearchPurchaseOrderLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "UpdatePurchaseOrderLambdaVersionIPOULfjoZQKD3CF98D0fzlyhKN8cGM4bD8L6x94k8": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdatePurchaseOrderLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "DeactivatePurchaseOrderLambdaVersiondgjG7gFuXNeNbwDPqEfWGCvd8S9fORJH6TLfaimfY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeactivatePurchaseOrderLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "AddQuotationLambdaVersionPmx9rWJdjcSbk8kcTpIVMAkNLit7E2jo4eIC8zIus": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AddQuotationLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "DeleteQuotationLambdaVersionZyFi8C85yiRVWIWoi0wuLfAOOjHMw0ruAdg08dyF2U": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteQuotationLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "SearchQuotationLambdaVersionrg91KQZJ93ZfDd4oLyUAOTvC3DfrN95QmogQaCsArlQ": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SearchQuotationLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "UpdateQuotationLambdaVersionk33BfXmlYz3jouDAIYN0rrxVkU0nOczC3X9XE5wRb8": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateQuotationLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "DeactivateQuotationLambdaVersionqslVxoYNouI1sgJLfvjtGOWOTZcN0QPXaHIl18Tyo": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeactivateQuotationLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "AddApproversLambdaVersionC0IZc2tFdIEvuaBLPKlcl6083BxSw7vvHYyeSwuio": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AddApproversLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "DeleteApproversLambdaVersionQmRi0lSgPCmrhieZxY5jFMb8tlwwqAT6ISYSdmyCAk": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteApproversLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "SearchApproversLambdaVersionrlHg17793yUjyn9FVWMutHuayzbIMMBERpfDH6RLGRU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SearchApproversLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "UpdateApproversLambdaVersionE5pnzhVs8we2tJo9hwmffVcLnD6u7VwIb6aeJL4TLu0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateApproversLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "AddCompanyProfileLambdaVersionN1gCPsY6TV3fxh2AvAGPVmpw4CBFHPos5EggMyZvlk": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AddCompanyProfileLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "DeleteCompanyProfileLambdaVersion9D2XyDufGMLyV8WvJPWbfek6RPkvbOZjAIHBUYzHg": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteCompanyProfileLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "SearchCompanyProfileLambdaVersion8DpdbfHQ8wDnq7b45EbrZEi5kHknIcZ9oenPMb53zU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SearchCompanyProfileLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "UpdateCompanyProfileLambdaVersion29bxXhKN22usMBo3MmRgiavsGtk64qfP0cDiVWcuwQ": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateCompanyProfileLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "DeactivateCompanyProfileLambdaVersionBCyGtBvRCYUHUpvmXbYnMSEcMI0eDhVvhtRFv2GvtI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeactivateCompanyProfileLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "SearchSentEmailsLambdaVersionCslc84fcwCFw5ZQ7Ddaj0PpTcku8tnpCxfmgsJFesM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SearchSentEmailsLambdaFunction"
        },
        "CodeSha256": "7GFk8fLSCqwtZ6lDMXCfTjjIdwRgRG36TW8QHkAaZ5Q="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-procurement",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceRequest": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "request",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceRequestDeactivate": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceRequest"
        },
        "PathPart": "deactivate",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceRequestApprove": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceRequest"
        },
        "PathPart": "approve",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceSupplier": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "supplier",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceSupplierDeactivate": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceSupplier"
        },
        "PathPart": "deactivate",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceProduct": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "product",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceProductDeactivate": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceProduct"
        },
        "PathPart": "deactivate",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceCurrency": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "currency",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceCurrencyDeactivate": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceCurrency"
        },
        "PathPart": "deactivate",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceInvoice": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "invoice",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceInvoiceDeactivate": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceInvoice"
        },
        "PathPart": "deactivate",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourcePurchaseorder": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "purchase_order",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourcePurchaseorderDeactivate": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourcePurchaseorder"
        },
        "PathPart": "deactivate",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceQuotation": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "quotation",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceQuotationDeactivate": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceQuotation"
        },
        "PathPart": "deactivate",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceApprovers": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "approvers",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceCompanyprofile": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "company_profile",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceCompanyprofileDeactivate": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceCompanyprofile"
        },
        "PathPart": "deactivate",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceEmail": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "email",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodRequestPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceRequest"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AddRequestLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "AddRequestLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodRequestDelete": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceRequest"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeleteRequestLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "DeleteRequestLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodRequestGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceRequest"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "SearchRequestLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "SearchRequestLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodRequestPut": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceRequest"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UpdateRequestLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "UpdateRequestLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodRequestDeactivatePost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceRequestDeactivate"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeactivateRequestLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "DeactivateRequestLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodRequestApprovePost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceRequestApprove"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ApproveRequestLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "ApproveRequestLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodSupplierPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceSupplier"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AddSupplierLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "AddSupplierLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodSupplierDelete": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceSupplier"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeleteSupplierLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "DeleteSupplierLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodSupplierGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceSupplier"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "SearchSupplierLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "SearchSupplierLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodSupplierPut": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceSupplier"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UpdateSupplierLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "UpdateSupplierLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodSupplierDeactivatePost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceSupplierDeactivate"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeactivateSupplierLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "DeactivateSupplierLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodProductPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceProduct"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AddProductLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "AddProductLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodProductDelete": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceProduct"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeleteProductLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "DeleteProductLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodProductGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceProduct"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "SearchProductLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "SearchProductLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodProductPut": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceProduct"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UpdateProductLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "UpdateProductLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodProductDeactivatePost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceProductDeactivate"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeactivateProductLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "DeactivateProductLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodCurrencyPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceCurrency"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AddCurrencyLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "AddCurrencyLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodCurrencyDelete": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceCurrency"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeleteCurrencyLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "DeleteCurrencyLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodCurrencyGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceCurrency"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "SearchCurrencyLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "SearchCurrencyLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodCurrencyPut": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceCurrency"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UpdateCurrencyLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "UpdateCurrencyLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodCurrencyDeactivatePost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceCurrencyDeactivate"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeactivateCurrencyLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "DeactivateCurrencyLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodInvoicePost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceInvoice"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AddInvoiceLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "AddInvoiceLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodInvoiceDelete": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceInvoice"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeleteInvoiceLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "DeleteInvoiceLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodInvoiceGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceInvoice"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "SearchInvoiceLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "SearchInvoiceLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodInvoicePut": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceInvoice"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UpdateInvoiceLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "UpdateInvoiceLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodInvoiceDeactivatePost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceInvoiceDeactivate"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeactivateInvoiceLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "DeactivateInvoiceLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodPurchaseorderPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourcePurchaseorder"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AddPurchaseOrderLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "AddPurchaseOrderLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodPurchaseorderDelete": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourcePurchaseorder"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeletePurchaseOrderLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "DeletePurchaseOrderLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodPurchaseorderGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourcePurchaseorder"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "SearchPurchaseOrderLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "SearchPurchaseOrderLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodPurchaseorderPut": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourcePurchaseorder"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UpdatePurchaseOrderLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "UpdatePurchaseOrderLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodPurchaseorderDeactivatePost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourcePurchaseorderDeactivate"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeactivatePurchaseOrderLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "DeactivatePurchaseOrderLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodQuotationPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceQuotation"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AddQuotationLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "AddQuotationLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodQuotationDelete": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceQuotation"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeleteQuotationLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "DeleteQuotationLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodQuotationGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceQuotation"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "SearchQuotationLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "SearchQuotationLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodQuotationPut": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceQuotation"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UpdateQuotationLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "UpdateQuotationLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodQuotationDeactivatePost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceQuotationDeactivate"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeactivateQuotationLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "DeactivateQuotationLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodApproversPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceApprovers"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AddApproversLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "AddApproversLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodApproversDelete": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceApprovers"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeleteApproversLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "DeleteApproversLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodApproversGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceApprovers"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "SearchApproversLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "SearchApproversLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodApproversPut": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceApprovers"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UpdateApproversLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "UpdateApproversLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodCompanyprofilePost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceCompanyprofile"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AddCompanyProfileLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "AddCompanyProfileLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodCompanyprofileDelete": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceCompanyprofile"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeleteCompanyProfileLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "DeleteCompanyProfileLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodCompanyprofileGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceCompanyprofile"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "SearchCompanyProfileLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "SearchCompanyProfileLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodCompanyprofilePut": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceCompanyprofile"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UpdateCompanyProfileLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "UpdateCompanyProfileLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodCompanyprofileDeactivatePost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceCompanyprofileDeactivate"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeactivateCompanyProfileLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "DeactivateCompanyProfileLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodEmailGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceEmail"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "SearchSentEmailsLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "SearchSentEmailsLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1675252877270": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodRequestPost",
        "ApiGatewayMethodRequestDelete",
        "ApiGatewayMethodRequestGet",
        "ApiGatewayMethodRequestPut",
        "ApiGatewayMethodRequestDeactivatePost",
        "ApiGatewayMethodRequestApprovePost",
        "ApiGatewayMethodSupplierPost",
        "ApiGatewayMethodSupplierDelete",
        "ApiGatewayMethodSupplierGet",
        "ApiGatewayMethodSupplierPut",
        "ApiGatewayMethodSupplierDeactivatePost",
        "ApiGatewayMethodProductPost",
        "ApiGatewayMethodProductDelete",
        "ApiGatewayMethodProductGet",
        "ApiGatewayMethodProductPut",
        "ApiGatewayMethodProductDeactivatePost",
        "ApiGatewayMethodCurrencyPost",
        "ApiGatewayMethodCurrencyDelete",
        "ApiGatewayMethodCurrencyGet",
        "ApiGatewayMethodCurrencyPut",
        "ApiGatewayMethodCurrencyDeactivatePost",
        "ApiGatewayMethodInvoicePost",
        "ApiGatewayMethodInvoiceDelete",
        "ApiGatewayMethodInvoiceGet",
        "ApiGatewayMethodInvoicePut",
        "ApiGatewayMethodInvoiceDeactivatePost",
        "ApiGatewayMethodPurchaseorderPost",
        "ApiGatewayMethodPurchaseorderDelete",
        "ApiGatewayMethodPurchaseorderGet",
        "ApiGatewayMethodPurchaseorderPut",
        "ApiGatewayMethodPurchaseorderDeactivatePost",
        "ApiGatewayMethodQuotationPost",
        "ApiGatewayMethodQuotationDelete",
        "ApiGatewayMethodQuotationGet",
        "ApiGatewayMethodQuotationPut",
        "ApiGatewayMethodQuotationDeactivatePost",
        "ApiGatewayMethodApproversPost",
        "ApiGatewayMethodApproversDelete",
        "ApiGatewayMethodApproversGet",
        "ApiGatewayMethodApproversPut",
        "ApiGatewayMethodCompanyprofilePost",
        "ApiGatewayMethodCompanyprofileDelete",
        "ApiGatewayMethodCompanyprofileGet",
        "ApiGatewayMethodCompanyprofilePut",
        "ApiGatewayMethodCompanyprofileDeactivatePost",
        "ApiGatewayMethodEmailGet"
      ]
    },
    "AddRequestLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AddRequestLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeleteRequestLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeleteRequestLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "SearchRequestLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SearchRequestLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "UpdateRequestLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UpdateRequestLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeactivateRequestLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeactivateRequestLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "ApproveRequestLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ApproveRequestLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "AddSupplierLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AddSupplierLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeleteSupplierLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeleteSupplierLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "SearchSupplierLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SearchSupplierLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "UpdateSupplierLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UpdateSupplierLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeactivateSupplierLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeactivateSupplierLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "AddProductLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AddProductLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeleteProductLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeleteProductLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "SearchProductLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SearchProductLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "UpdateProductLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UpdateProductLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeactivateProductLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeactivateProductLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "AddCurrencyLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AddCurrencyLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeleteCurrencyLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeleteCurrencyLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "SearchCurrencyLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SearchCurrencyLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "UpdateCurrencyLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UpdateCurrencyLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeactivateCurrencyLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeactivateCurrencyLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "AddInvoiceLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AddInvoiceLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeleteInvoiceLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeleteInvoiceLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "SearchInvoiceLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SearchInvoiceLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "UpdateInvoiceLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UpdateInvoiceLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeactivateInvoiceLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeactivateInvoiceLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "AddPurchaseOrderLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AddPurchaseOrderLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeletePurchaseOrderLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeletePurchaseOrderLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "SearchPurchaseOrderLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SearchPurchaseOrderLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "UpdatePurchaseOrderLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UpdatePurchaseOrderLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeactivatePurchaseOrderLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeactivatePurchaseOrderLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "AddQuotationLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AddQuotationLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeleteQuotationLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeleteQuotationLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "SearchQuotationLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SearchQuotationLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "UpdateQuotationLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UpdateQuotationLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeactivateQuotationLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeactivateQuotationLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "AddApproversLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AddApproversLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeleteApproversLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeleteApproversLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "SearchApproversLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SearchApproversLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "UpdateApproversLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UpdateApproversLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "AddCompanyProfileLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AddCompanyProfileLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeleteCompanyProfileLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeleteCompanyProfileLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "SearchCompanyProfileLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SearchCompanyProfileLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "UpdateCompanyProfileLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UpdateCompanyProfileLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeactivateCompanyProfileLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeactivateCompanyProfileLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "SearchSentEmailsLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SearchSentEmailsLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-procurement-dev-ServerlessDeploymentBucketName"
      }
    },
    "AddRequestLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AddRequestLambdaVersionPKv0Se9XVs0HyO2WrQsM6JFXIVE1JJAhaLfnV7jdR0"
      },
      "Export": {
        "Name": "sls-procurement-dev-AddRequestLambdaFunctionQualifiedArn"
      }
    },
    "DeleteRequestLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeleteRequestLambdaVersionkuQ2yVhfFhltHKgCIhWa7faKdT9EMn7z6dMUX8xMc"
      },
      "Export": {
        "Name": "sls-procurement-dev-DeleteRequestLambdaFunctionQualifiedArn"
      }
    },
    "SearchRequestLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SearchRequestLambdaVersionOEDEbJfOKun3ybTPouBtX2gU87RfDCCMFrxeYJjryQ"
      },
      "Export": {
        "Name": "sls-procurement-dev-SearchRequestLambdaFunctionQualifiedArn"
      }
    },
    "UpdateRequestLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UpdateRequestLambdaVersionBnDubYvlFLsoXl1YoES9WGE4EDXJW1GzATSVjzxdeo"
      },
      "Export": {
        "Name": "sls-procurement-dev-UpdateRequestLambdaFunctionQualifiedArn"
      }
    },
    "DeactivateRequestLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeactivateRequestLambdaVersionIkNlgd4v9fpAneU1TyLgDgcL0n3XGJDpL4k64EaFlck"
      },
      "Export": {
        "Name": "sls-procurement-dev-DeactivateRequestLambdaFunctionQualifiedArn"
      }
    },
    "ApproveRequestLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ApproveRequestLambdaVersiongtlqytx6MRlkrIgAXYvBt4rPdn7vzAAWAdgLDdrcqE"
      },
      "Export": {
        "Name": "sls-procurement-dev-ApproveRequestLambdaFunctionQualifiedArn"
      }
    },
    "AddSupplierLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AddSupplierLambdaVersionYXhH291cc2dM9ABRGnrkRo4NrcLSpczCxxnuqQIG4"
      },
      "Export": {
        "Name": "sls-procurement-dev-AddSupplierLambdaFunctionQualifiedArn"
      }
    },
    "DeleteSupplierLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeleteSupplierLambdaVersion9X8bXBj8HfdjsBw0oi4x3K4GFKD6Eufys4VfLuvw8"
      },
      "Export": {
        "Name": "sls-procurement-dev-DeleteSupplierLambdaFunctionQualifiedArn"
      }
    },
    "SearchSupplierLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SearchSupplierLambdaVersionctZkJmT06QBldPFZOe8Cp7GU3VBenpesES6lQRsxo"
      },
      "Export": {
        "Name": "sls-procurement-dev-SearchSupplierLambdaFunctionQualifiedArn"
      }
    },
    "UpdateSupplierLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UpdateSupplierLambdaVersionLfiCpzykh4hFs0FNkAeaS5Pn60g6uVgeo0LAvps"
      },
      "Export": {
        "Name": "sls-procurement-dev-UpdateSupplierLambdaFunctionQualifiedArn"
      }
    },
    "DeactivateSupplierLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeactivateSupplierLambdaVersionQqvsfpu3OTBrU1AoLeZeQbjvAG6GzJUfjaksmPA"
      },
      "Export": {
        "Name": "sls-procurement-dev-DeactivateSupplierLambdaFunctionQualifiedArn"
      }
    },
    "AddProductLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AddProductLambdaVersiontGILAZ1dXgbLnpneBrKxDJzD77N6628kzb6S3kaTk"
      },
      "Export": {
        "Name": "sls-procurement-dev-AddProductLambdaFunctionQualifiedArn"
      }
    },
    "DeleteProductLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeleteProductLambdaVersionnR1YUNA3IS5l2EhxHZAHgf8vq0r5tnDeR8a24Hg9g"
      },
      "Export": {
        "Name": "sls-procurement-dev-DeleteProductLambdaFunctionQualifiedArn"
      }
    },
    "SearchProductLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SearchProductLambdaVersionsDnMFxTTEOtPqOPnRkPiZl37tBLFT5GczqoVIn44r8"
      },
      "Export": {
        "Name": "sls-procurement-dev-SearchProductLambdaFunctionQualifiedArn"
      }
    },
    "UpdateProductLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UpdateProductLambdaVersionlFdEuY7Mkkp0yCJdtXl92gXkdJvf4htnhzrT9j7SO4"
      },
      "Export": {
        "Name": "sls-procurement-dev-UpdateProductLambdaFunctionQualifiedArn"
      }
    },
    "DeactivateProductLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeactivateProductLambdaVersionxC2tKr1aYhsdn5higOsLQl648DpZmgCMGbJR7SRDhss"
      },
      "Export": {
        "Name": "sls-procurement-dev-DeactivateProductLambdaFunctionQualifiedArn"
      }
    },
    "AddCurrencyLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AddCurrencyLambdaVersion50XZuacQaGJSlrye8oO7PBA49fbzyALENNauqQoEB4"
      },
      "Export": {
        "Name": "sls-procurement-dev-AddCurrencyLambdaFunctionQualifiedArn"
      }
    },
    "DeleteCurrencyLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeleteCurrencyLambdaVersionVh5pjYdyVxNAGUljKmA6Ol4RSBegq0Cc4y1pyPYfRg"
      },
      "Export": {
        "Name": "sls-procurement-dev-DeleteCurrencyLambdaFunctionQualifiedArn"
      }
    },
    "SearchCurrencyLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SearchCurrencyLambdaVersionfzJMH96jM2Lgp4xvkIsksCMxh4q1aetPpTRNkLcpc"
      },
      "Export": {
        "Name": "sls-procurement-dev-SearchCurrencyLambdaFunctionQualifiedArn"
      }
    },
    "UpdateCurrencyLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UpdateCurrencyLambdaVersionH7Jv8tR5JLG2frnMq3G3j61z5dBmY4FIp4PMs8X8M"
      },
      "Export": {
        "Name": "sls-procurement-dev-UpdateCurrencyLambdaFunctionQualifiedArn"
      }
    },
    "DeactivateCurrencyLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeactivateCurrencyLambdaVersionaf5KxOnvC7vheoTVyboE9A45HoX616LE4S8Dkx5g"
      },
      "Export": {
        "Name": "sls-procurement-dev-DeactivateCurrencyLambdaFunctionQualifiedArn"
      }
    },
    "AddInvoiceLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AddInvoiceLambdaVersionr7CIVufQZocX5vkuQ3C51g2LmDVqoVIOK3fBhDrbyU"
      },
      "Export": {
        "Name": "sls-procurement-dev-AddInvoiceLambdaFunctionQualifiedArn"
      }
    },
    "DeleteInvoiceLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeleteInvoiceLambdaVersiontRbORo1m5inWbQGljN400n3BGNl965Y4gwI7yFvHU"
      },
      "Export": {
        "Name": "sls-procurement-dev-DeleteInvoiceLambdaFunctionQualifiedArn"
      }
    },
    "SearchInvoiceLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SearchInvoiceLambdaVersion5VXgDBsELH4NyRdrOvX65ggEGmIf7PlDLlvHW86WXI"
      },
      "Export": {
        "Name": "sls-procurement-dev-SearchInvoiceLambdaFunctionQualifiedArn"
      }
    },
    "UpdateInvoiceLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UpdateInvoiceLambdaVersionQNhxkQqPcoxmHC09qo7NH1hjWqYNc6mrwYrrqLW6P68"
      },
      "Export": {
        "Name": "sls-procurement-dev-UpdateInvoiceLambdaFunctionQualifiedArn"
      }
    },
    "DeactivateInvoiceLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeactivateInvoiceLambdaVersionNVLH6opXcR7xG244BdC6K1VzPkrbAyFOGHcEUHd5Yd4"
      },
      "Export": {
        "Name": "sls-procurement-dev-DeactivateInvoiceLambdaFunctionQualifiedArn"
      }
    },
    "AddPurchaseOrderLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AddPurchaseOrderLambdaVersionh7d5jTBGKnUL9b2PVoP7pYYa9BYBLQgN7MHwRdW3c"
      },
      "Export": {
        "Name": "sls-procurement-dev-AddPurchaseOrderLambdaFunctionQualifiedArn"
      }
    },
    "DeletePurchaseOrderLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeletePurchaseOrderLambdaVersionJs4mZdCR0tYVAXhsVrdbsus2DPph6XYmGFZDRQ3o"
      },
      "Export": {
        "Name": "sls-procurement-dev-DeletePurchaseOrderLambdaFunctionQualifiedArn"
      }
    },
    "SearchPurchaseOrderLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SearchPurchaseOrderLambdaVersion2zqeAqTf139HVMXEKAgcUh671b6RXGrI86knOK4qWA"
      },
      "Export": {
        "Name": "sls-procurement-dev-SearchPurchaseOrderLambdaFunctionQualifiedArn"
      }
    },
    "UpdatePurchaseOrderLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UpdatePurchaseOrderLambdaVersionIPOULfjoZQKD3CF98D0fzlyhKN8cGM4bD8L6x94k8"
      },
      "Export": {
        "Name": "sls-procurement-dev-UpdatePurchaseOrderLambdaFunctionQualifiedArn"
      }
    },
    "DeactivatePurchaseOrderLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeactivatePurchaseOrderLambdaVersiondgjG7gFuXNeNbwDPqEfWGCvd8S9fORJH6TLfaimfY"
      },
      "Export": {
        "Name": "sls-procurement-dev-DeactivatePurchaseOrderLambdaFunctionQualifiedArn"
      }
    },
    "AddQuotationLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AddQuotationLambdaVersionPmx9rWJdjcSbk8kcTpIVMAkNLit7E2jo4eIC8zIus"
      },
      "Export": {
        "Name": "sls-procurement-dev-AddQuotationLambdaFunctionQualifiedArn"
      }
    },
    "DeleteQuotationLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeleteQuotationLambdaVersionZyFi8C85yiRVWIWoi0wuLfAOOjHMw0ruAdg08dyF2U"
      },
      "Export": {
        "Name": "sls-procurement-dev-DeleteQuotationLambdaFunctionQualifiedArn"
      }
    },
    "SearchQuotationLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SearchQuotationLambdaVersionrg91KQZJ93ZfDd4oLyUAOTvC3DfrN95QmogQaCsArlQ"
      },
      "Export": {
        "Name": "sls-procurement-dev-SearchQuotationLambdaFunctionQualifiedArn"
      }
    },
    "UpdateQuotationLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UpdateQuotationLambdaVersionk33BfXmlYz3jouDAIYN0rrxVkU0nOczC3X9XE5wRb8"
      },
      "Export": {
        "Name": "sls-procurement-dev-UpdateQuotationLambdaFunctionQualifiedArn"
      }
    },
    "DeactivateQuotationLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeactivateQuotationLambdaVersionqslVxoYNouI1sgJLfvjtGOWOTZcN0QPXaHIl18Tyo"
      },
      "Export": {
        "Name": "sls-procurement-dev-DeactivateQuotationLambdaFunctionQualifiedArn"
      }
    },
    "AddApproversLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AddApproversLambdaVersionC0IZc2tFdIEvuaBLPKlcl6083BxSw7vvHYyeSwuio"
      },
      "Export": {
        "Name": "sls-procurement-dev-AddApproversLambdaFunctionQualifiedArn"
      }
    },
    "DeleteApproversLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeleteApproversLambdaVersionQmRi0lSgPCmrhieZxY5jFMb8tlwwqAT6ISYSdmyCAk"
      },
      "Export": {
        "Name": "sls-procurement-dev-DeleteApproversLambdaFunctionQualifiedArn"
      }
    },
    "SearchApproversLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SearchApproversLambdaVersionrlHg17793yUjyn9FVWMutHuayzbIMMBERpfDH6RLGRU"
      },
      "Export": {
        "Name": "sls-procurement-dev-SearchApproversLambdaFunctionQualifiedArn"
      }
    },
    "UpdateApproversLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UpdateApproversLambdaVersionE5pnzhVs8we2tJo9hwmffVcLnD6u7VwIb6aeJL4TLu0"
      },
      "Export": {
        "Name": "sls-procurement-dev-UpdateApproversLambdaFunctionQualifiedArn"
      }
    },
    "AddCompanyProfileLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AddCompanyProfileLambdaVersionN1gCPsY6TV3fxh2AvAGPVmpw4CBFHPos5EggMyZvlk"
      },
      "Export": {
        "Name": "sls-procurement-dev-AddCompanyProfileLambdaFunctionQualifiedArn"
      }
    },
    "DeleteCompanyProfileLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeleteCompanyProfileLambdaVersion9D2XyDufGMLyV8WvJPWbfek6RPkvbOZjAIHBUYzHg"
      },
      "Export": {
        "Name": "sls-procurement-dev-DeleteCompanyProfileLambdaFunctionQualifiedArn"
      }
    },
    "SearchCompanyProfileLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SearchCompanyProfileLambdaVersion8DpdbfHQ8wDnq7b45EbrZEi5kHknIcZ9oenPMb53zU"
      },
      "Export": {
        "Name": "sls-procurement-dev-SearchCompanyProfileLambdaFunctionQualifiedArn"
      }
    },
    "UpdateCompanyProfileLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UpdateCompanyProfileLambdaVersion29bxXhKN22usMBo3MmRgiavsGtk64qfP0cDiVWcuwQ"
      },
      "Export": {
        "Name": "sls-procurement-dev-UpdateCompanyProfileLambdaFunctionQualifiedArn"
      }
    },
    "DeactivateCompanyProfileLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeactivateCompanyProfileLambdaVersionBCyGtBvRCYUHUpvmXbYnMSEcMI0eDhVvhtRFv2GvtI"
      },
      "Export": {
        "Name": "sls-procurement-dev-DeactivateCompanyProfileLambdaFunctionQualifiedArn"
      }
    },
    "SearchSentEmailsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SearchSentEmailsLambdaVersionCslc84fcwCFw5ZQ7Ddaj0PpTcku8tnpCxfmgsJFesM"
      },
      "Export": {
        "Name": "sls-procurement-dev-SearchSentEmailsLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-procurement-dev-ServiceEndpoint"
      }
    }
  }
}